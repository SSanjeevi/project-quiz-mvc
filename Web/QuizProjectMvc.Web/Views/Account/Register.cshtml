@model QuizProjectMvc.Web.ViewModels.Account.RegisterViewModel
@{
    ViewBag.Title = "Register";
    string labelClass = "col-lg-3 control-label";
    string inputClass = "form-control";
    string validationClass = "text-danger";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <fieldset>
        <legend><span class="fa fa-sign-in"></span> Create a new account.</legend>

        @Html.AntiForgeryToken()


        <div class="form-group required">
            @Html.LabelFor(m => m.UserName, new {@class = labelClass})
            <div class="col-lg-9">
                @Html.TextBoxFor(m => m.UserName, new {@class = inputClass})
                @Html.ValidationMessageFor(m => m.UserName, String.Empty, new {@class = validationClass})
            </div>
        </div>

        <div class="form-group required">
            @Html.LabelFor(m => m.Password, new { @class = labelClass })
            <div class="col-lg-9">
                @Html.TextBoxFor(m => m.Password, new { @class = inputClass })
                @Html.ValidationMessageFor(m => m.Password, String.Empty, new { @class = validationClass })
            </div>
        </div>

        <div class="form-group required">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = labelClass })
            <div class="col-lg-9">
                @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = inputClass })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, String.Empty, new { @class = validationClass })
            </div>
        </div>

        @Html.EditorForModel("AccountDetailsViewModel")
      
        <!-- Submit-->
        <div class="form-group">
            <div class="col-lg-9 col-lg-offset-3 clearfix">
                <input type="submit" class="btn btn-primary pull-right" value="Register">
            </div>
        </div>
    </fieldset>
}

<hr />
<p class="text-right">Already have an account? @Html.ActionLink("Login", "Login")</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
